#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                   &kp W                    &kp E         &kp R      &kp T                              &kp Y  &kp U  &kp I      &kp O      &kp P
&kp A                   &kp S                    &kp D         &kp F      &kp G  &none      &kp GRAVE        &kp H  &kp J  &kp K      &kp L      &kp MINUS
&kp Z                   &kp X                    &kp C         &kp V      &kp B  &kp TAB    &kp ENTER        &kp N  &kp M  &mkp LCLK  &mkp MCLK  &mkp RCLK
&kp LA(LC(LEFT_ARROW))  &kp LA(LC(RIGHT_ARROW))  &kp LEFT_WIN  &kp LCTRL  &mo 1  &kp SPACE  &kp RIGHT_SHIFT  &mo 2                               &mo 5
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION   &kp DOUBLE_QUOTES  &kp HASH      &kp DOLLAR   &kp PERCENT                                &kp AMPERSAND  &kp SQT       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DELETE
&kp COLON         &kp UNDERSCORE     &kp TILDE     &kp GRAVE    &kp PIPE       &none      &kp SEMICOLON    &kp MINUS      &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp CARET     &kp AT_SIGN  &kp BACKSLASH  &kp TAB    &kp BACKSPACE    &kp EQUAL      &kp ASTERISK  &kp COMMA             &kp PERIOD             &kp SLASH
&kp LESS_THAN     &kp GREATER_THAN   &kp LEFT_WIN  &kp LCTRL    &mo 1          &kp SPACE  &kp RIGHT_SHIFT  &mo 3                                                                     &mo 5
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                          &kp NUMBER_6  &kp N7          &kp N8          &kp N9     &kp N0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5   &none      &none       &kp F6        &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT  &kp PAGE_UP
&kp F7        &kp F8        &kp F9        &kp F10       &kp F11  &kp TAB    &kp ENTER   &kp F12       &kp HOME        &kp DOWN_ARROW  &kp END    &kp PAGE_DOWN
&kp RSHIFT    &kp TAB       &kp LEFT_WIN  &kp LCTRL     &mo 3    &kp SPACE  &kp LSHIFT  &mo 2                                                    &mo 5
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                              &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp P
&kp A       &kp S      &kp D     &kp F     &kp G  &none      &none            &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B  &kp TAB    &kp ENTER        &kp EQUAL  &kp N7        &kp N8        &kp N9        &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &mo 3  &kp SPACE  &kp RIGHT_SHIFT  &mo 3                                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&kp Q       &kp W    &kp E             &kp R         &kp T                            &kp Y          &kp U  &kp I     &kp O     &kp P
&kp A       &kp S    &kp D             &kp F         &kp G     &kp N1    &kp N2       &kp H          &kp J  &kp K     &kp L     &kp ENTER
&kp Z       &kp X    &kp C             &kp V         &kp B     &kp N3    &kp N4       &kp N          &kp M  &mkp MB1  &mkp MB2  &kp SLASH
&kp ESCAPE  &kp TAB  &kp LEFT_CONTROL  &kp LEFT_GUI  &mkp MB1  &mkp MB2  &lt 2 SPACE  &kp BACKSPACE                             &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q         &kp W         &kp E         &kp R     &kp T                        &kp Y        &kp U  &kp I            &kp O        &kp P
&kp A         &kp S         &kp D         &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp LS(LC(TAB))  &kp LC(TAB)  &kp MINUS
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &mkp LCLK        &mkp MCLK    &mkp RCLK
&bt BT_PRV    &bt BT_NXT    &kp LGUI      &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                       &mo 5
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
